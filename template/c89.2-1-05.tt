@comment
  Copyright (C) 2005 Free Software Foundation, Inc.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA

Please email any bugs, comments, and/or additions to this file to:
ishiura-gcc@ksc.kwansei.ac.jp

This file was written by Yuki Uchiyama. (ishiura-gcc@ksc.kwansei.ac.jp)
@comment_

@include
license.inc
@include_

@def $HEADER()
#ifdef SYSDEP_H
#include "sysdep.h"
#endif
#include "stnd2.5.h"
@def_

@def $test1($VAR9)
	itest = NO;
	$VAR9 = OKRVL;
	itest = ~$VAR9;

	if (itest == OK)
		printok();
	else
		printno();
@def_
@def $ctest1($VAR9)
	ctest = NCHAR;
	$VAR9 = OKCRV;
	ctest = ~$VAR9;

	if (ctest == OK)
		printok();
	else
		printno();
@def_
@def $test2($VAR9)
	itest = NO;
	$VAR9 = OKRV;
	itest = ~$VAR9;

	if (itest == OK)
		printok();
	else
		printno();
@def_
@def $stest2($VAR9)
	itest = NO;
	$VAR9 = OKRVS;
	itest = ~$VAR9;

	if (itest == OK)
		printok();
	else
		printno();
@def_

@def $macro0($MODIFIER)
$LICENSE()
$HEADER()
int main(void)
{
	$MODIFIER long            Long;

$test1(Long)

	return 0;
}
@def_


@def $macro1($MODIFIER)
$LICENSE()
$HEADER()

int main(void)
{
	$MODIFIER union Union {
		int             Int;
		long            Long;
		char            Char;
	}               Union;

$test1(Union.Int)

$test1(Union.Long)

$ctest1(Union.Char)

	return 0;
}
@def_


@def $macro2()
$LICENSE()
#include "testout.h"
long            itest;
char            ctest;
#ifndef OKRVS
# define OKRVS ($USHORTMAX() - 1)
#endif
#ifndef OKRV
# ifdef unix
#  define OKRV ($UINTMAX() - 1)
# else
#  define OKRV ($USHORTMAX() - 1)
# endif
#endif
#define OKRVL ($ULONGMAX() - 1)
#define OKCRV ($UCHARMAX() - 1)
#define OK 1
#define NO 0
#define YCHAR	'y'
#define NCHAR	'n'
int             Int;
long            Long;
short           Short;
unsigned        Unsigned;
char            Char;
struct Struct {
	int             Int;
	long            Long;
	short           Short;
	unsigned        Unsigned;
	char            Char;
}               Struct;
union Union {
	int             Int;
	long            Long;
	char            Char;
}               Union;
typedef int     INTDEF;
typedef long    LONGDEF;
typedef short   SHORTDEF;
typedef unsigned UNSIGNDEF;
typedef char    CHARDEF;
typedef struct {
	int             Int;
	long            Long;
	short           Short;
	unsigned        Unsigned;
	char            Char;
}               STRDEF;
typedef union {
	int             Int;
	long            Long;
	char            Char;
}               UNIDEF;
@def_

@def $macro3($MODIFIER,$VAR1,$TYPE1)
$LICENSE()
$HEADER()
int main(void)
{
	$MODIFIER $TYPE1 $VAR1;

	itest = NO;
	$VAR1 = OKRV;
	itest = ~$VAR1;

	if (itest == OK)
		printok();
	else
		printno();


	return 0;
}
@def_


@def $macro8($MODIFIER)
$LICENSE()
$HEADER()
int main(void)
{
	$MODIFIER struct Struct {
		int             Int;
		short           Short;
		unsigned        Unsigned;
		char            Char;
	}               Struct;

$test2(Struct.Int)

$stest2(Struct.Short)

$test2(Struct.Unsigned)

$ctest1(Struct.Char)

	return 0;
}
@def_


@def $macro9($MODIFIER)
$LICENSE()
$HEADER()
int main(void)
{
	$MODIFIER union Union {
		int             Int;
		char            Char;
	}               Union;

$test2(Union.Int)

$ctest1(Union.Char)

	return 0;
}
@def_


@def $macro10($MODIFIER)
$LICENSE()
$HEADER()
int main(void)
{
	$MODIFIER INTDEF          Intdef;
	$MODIFIER SHORTDEF        Shortdef;
	$MODIFIER UNSIGNDEF       Unsigndef;
	$MODIFIER CHARDEF         Chardef;
	$MODIFIER STRDEF          Strdef;
	$MODIFIER UNIDEF          Unidef;

$test2(Intdef)

$stest2(Shortdef)

$test2(Unsigndef)

$ctest1(Chardef)

$test2(Strdef.Int)

$stest2(Strdef.Short)

$test2(Strdef.Unsigned)

$ctest1(Strdef.Char)

$test2(Unidef.Int)

$ctest1(Unidef.Char)

	return 0;
}
@def_

@include
testout.h.inc
@include_

@dir c89.2-1-05
@file >>lt???.c $macro0([,extern,static]) @file_
@file >>lt???.c $macro1([,static]) @file_
@file >>stnd2.5.h $macro2() @file_
@comment $macro3 の引数から char 型を排除
@file >>t???_.c $macro3([,static,register],Variable,[int,short,unsigned,char]) @file_
@comment_
@file >>t???_.c $macro3([,static,register],Variable,[int,short,unsigned]) @file_
@file >>t???_extern_int.c $macro3(extern,Int,int) @file_
@file >>t???_extern_short.c $macro3(extern,Short,short) @file_
@file >>t???_extern_unsigned.c $macro3(extern,Unsigned,unsigned) @file_
@comment
@file >>t???_extern_char.c $macro3(extern,Char,char) @file_
@comment_
@file >>t???.c $macro8([,static,register]) @file_
@file >>t???.c $macro9([,static,register]) @file_
@file >>t???.c $macro10([,static,register]) @file_
@file >>testout.h $testout() @file_
@dir_

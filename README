Testsuite generator 2

Ishiura lab in Kwansei gakuin university
2011/JUL/25

0. Introduction

1. Write configuration file
   First you should write a configuration file.
   A configuration file is just a Perl's hash reference(HashRef).
   There are some mandatory parameters and some optional parameters.

   [Mandatory Parameters]
      compiler (type: String)  - compiler which is tested.
      testdir  (type: String)  - a directory where tests are generated.
      size     (type: Hashref) - sizes of types in C language.
                                 It has keys, 'char', 'short', 'int', 'long'
                                 at least.

      'size' parameter looks like as follows:
          size => {
             char => 8, short => 16, int => 32, long => 64
          },

       The generator makes predefined macros from it's parameter.
       ($CHARMIN(), $CHARMAX(), $UCHARMAX() ...).
       These macros are used in template files.

   [Optional Parameters]
      simulator (types: String)   - simulator used running executable.
      c_flags   (types: ArrayRef) - compile flags which turn on at compiling.
      ld_flags  (types: ArrayRef) - linker flags which turn on at compiling.
      options   (types: ArrayRef) - user specified compile option.
                                    'run script' compiles each one.
      compile_only (types: Bool)  - a flag of only compileing, not executing.
      color        (types: Bool)  - using color logging.
                                      [Green]  - All tests passed
                                      [Yellow] - Failed executing.
                                      [Red]    - Compiling and Executing failed.
      parallels  (types: Int) - run 'n' tests simultaneously.
      complement (types: Int) - complement of platform tested.
      timeout    (types: Int) - 'timeout' seconds of executing.

      [Default values]
         simulator    - undef
         c_flags      - []
         ld_flags     - []
         options      - [ '' ]
         compile_only - 0
         color        - 0
         parallels    - 1
         complement   - 2 (It is Two's complement)
         timeout      - 10

   There are sample configuration files in config/ directory.
   Please see them and you use them as reference.

2. How to use
  2-1 Generates test files
    % perl bin/tgen.pl --config=config/tgen.cnf

    Then testsuites are generated in the directory($config->{testdir}).
    And a 'run script' is generated in same directory.

    You can see command line options of tgen.pl, run 'tgen.pl --help'.

  2-2 Merges test files
    # not implemented yet.

  2-3 Run test files(Compile and Execute)
    % cd TESTDIR # TESTDIR is $config->{testdir}
    % ./runtest.pl [Regexp] ...

    If you specified regular expressions with './runtest.pl',
    it runs tests in only directories which match 'Regexp'.
    If you specified no regular expressions, it runs tests in all directories.

Appendix A. Directories hierarchy

   - README   : It's me.
   - COPYING  : Licence GPL ver.2
   - Changes  : ChangeLog
   - tgen.cnf : Default configuration file.

   - bin/
      - tgen.pl : script of test files generator.

   - config/
     - tgen_32.cnf : Sample configuration file of 32bit platform.
     - tgen_64.cnf : Sample configuration file of 64bit platform.
